import time
import random
import string
from appium import webdriver
from appium.webdriver.common.appiumby import AppiumBy
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException, WebDriverException

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
SEARCH_COMBINATIONS_COUNT = 100  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–ª—è –ø–æ–∏—Å–∫–∞
SEARCH_DELAY = 2  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ –ø–æ–∏—Å–∫–∞ (—Å–µ–∫—É–Ω–¥—ã)
CLEAR_DELAY = 1   # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –ø–æ–ª—è (—Å–µ–∫—É–Ω–¥—ã)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
WAIT_TIMEOUT = 30  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å–µ–∫—É–Ω–¥—ã)
POLL_FREQUENCY = 0.5  # –ß–∞—Å—Ç–æ—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å–µ–∫—É–Ω–¥—ã)

def generate_search_combinations(num_combinations=100):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –∏–∑ –±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä –¥–ª–∏–Ω–æ–π 3 —Å–∏–º–≤–æ–ª–∞
    
    Args:
        num_combinations (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    
    Returns:
        list: –°–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –¥–ª–∏–Ω–æ–π 3 —Å–∏–º–≤–æ–ª–∞
    """
    # –°–æ–∑–¥–∞–µ–º –Ω–∞–±–æ—Ä —Å–∏–º–≤–æ–ª–æ–≤: –±—É–∫–≤—ã (a-z) + —Ü–∏—Ñ—Ä—ã (0-9)
    characters = string.ascii_lowercase + string.digits
    combinations = set()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    while len(combinations) < num_combinations:
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–∑ 3 —Å–∏–º–≤–æ–ª–æ–≤
        combination = ''.join(random.choices(characters, k=3))
        combinations.add(combination)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏
    return list(combinations)

def safe_click_element(driver, wait, locator, locator_value, action_description):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    
    Args:
        driver: WebDriver instance
        wait: WebDriverWait instance
        locator: –¢–∏–ø –ª–æ–∫–∞—Ç–æ—Ä–∞ (AppiumBy.ID, AppiumBy.XPATH, etc.)
        locator_value: –ó–Ω–∞—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ç–æ—Ä–∞
        action_description: –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ –∫–ª–∏–∫ —É—Å–ø–µ—à–µ–Ω, False –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    """
    try:
        print(f"üîç –û–∂–∏–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è: {action_description}")
        element = wait.until(EC.element_to_be_clickable((locator, locator_value)))
        print(f"‚úÖ –ö–ª–∏–∫–∞–µ–º: {action_description}")
        element.click()
        return True
    except TimeoutException:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞: {action_description}")
        print(f"   –õ–æ–∫–∞—Ç–æ—Ä: {locator} = '{locator_value}'")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ: {action_description}")
        print(f"   –û—à–∏–±–∫–∞: {str(e)}")
        return False

def safe_send_keys(driver, wait, locator, locator_value, text, action_description):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    
    Args:
        driver: WebDriver instance
        wait: WebDriverWait instance
        locator: –¢–∏–ø –ª–æ–∫–∞—Ç–æ—Ä–∞
        locator_value: –ó–Ω–∞—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ç–æ—Ä–∞
        text: –¢–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞
        action_description: –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ –≤–≤–æ–¥ —É—Å–ø–µ—à–µ–Ω, False –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    """
    try:
        print(f"üîç –û–∂–∏–¥–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –¥–ª—è: {action_description}")
        element = wait.until(EC.element_to_be_clickable((locator, locator_value)))
        print(f"üìù –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç: '{text}' - {action_description}")
        element.clear()
        element.send_keys(text)
        return True
    except TimeoutException:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª—è –≤–≤–æ–¥–∞: {action_description}")
        print(f"   –õ–æ–∫–∞—Ç–æ—Ä: {locator} = '{locator_value}'")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞: {action_description}")
        print(f"   –û—à–∏–±–∫–∞: {str(e)}")
        return False

def safe_clear_field(driver, wait, locator, locator_value, action_description):
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    
    Args:
        driver: WebDriver instance
        wait: WebDriverWait instance
        locator: –¢–∏–ø –ª–æ–∫–∞—Ç–æ—Ä–∞
        locator_value: –ó–Ω–∞—á–µ–Ω–∏–µ –ª–æ–∫–∞—Ç–æ—Ä–∞
        action_description: –û–ø–∏—Å–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    
    Returns:
        bool: True –µ—Å–ª–∏ –æ—á–∏—Å—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞, False –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    """
    try:
        print(f"üßπ –û—á–∏—â–∞–µ–º –ø–æ–ª–µ: {action_description}")
        element = wait.until(EC.element_to_be_clickable((locator, locator_value)))
        element.clear()
        return True
    except TimeoutException:
        print(f"‚ùå –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–ª—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏: {action_description}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–æ–ª—è: {action_description}")
        print(f"   –û—à–∏–±–∫–∞: {str(e)}")
        return False

# ============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ê –î–õ–Ø –§–ò–ó–ò–ß–ï–°–ö–û–ì–û –£–°–¢–†–û–ô–°–¢–í–ê SAMSUNG A50
# ============================================================================
# 1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ Samsung A50 —á–µ—Ä–µ–∑ USB
# 2. –í–∫–ª—é—á–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ USB –æ—Ç–ª–∞–¥–∫—É
# 3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: adb devices
# 4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ deviceName –∏–∑ –≤—ã–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã
# 5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MetaTrader 4 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ

desired_cap = {
    "platformName": "Android",
    "appium:appPackage": "net.metaquotes.metatrader4",
    "appium:appActivity": "net.metaquotes.metatrader4.ui.MainActivity",
    # –ò–ó–ú–ï–ù–ò–¢–¨: –£–∫–∞–∂–∏—Ç–µ deviceName –≤–∞—à–µ–≥–æ Samsung A50 (–ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ adb devices)
    "appium:deviceName": "Samsung_A50",  # ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ –∏–º—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    # –£–±–∏—Ä–∞–µ–º appium:app —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
    "appium:automationName": "UiAutomator2",
    "appium:noReset": True,  # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    "appium:newCommandTimeout": 300,  # –¢–∞–π–º–∞—É—Ç –∫–æ–º–∞–Ω–¥ (5 –º–∏–Ω—É—Ç)
    "appium:autoGrantPermissions": True  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–∞–≤–∞—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
}

# ============================================================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –ü–†–û–í–ï–†–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
# ============================================================================
print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ Samsung A50")
print("üì± Device Name:", desired_cap["appium:deviceName"])
print("üì¶ App Package:", desired_cap["appium:appPackage"])
print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã—à–µ!")

try:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebDriver
    print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Appium Server...")
    driver = webdriver.Remote("http://localhost:4723/wd/hub", desired_cap)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebDriverWait
    wait = WebDriverWait(driver, WAIT_TIMEOUT, poll_frequency=POLL_FREQUENCY)
    
    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É!")
    
except WebDriverException as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Appium Server: {str(e)}")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
    print("   - Appium Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 4723")
    print("   - –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ —á–µ—Ä–µ–∑ adb devices")
    print("   - Device Name —É–∫–∞–∑–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    exit(1)

# ============================================================================
# –û–ñ–ò–î–ê–ù–ò–ï –ó–ê–ì–†–£–ó–ö–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================================================
print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è MetaTrader 4...")
time.sleep(5)  # –ë–∞–∑–æ–≤–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

# ============================================================================
# –û–ë–†–ê–ë–û–¢–ö–ê –î–ò–ê–õ–û–ì–û–í –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ============================================================================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "accept" (–º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑)
accept_button_id = "net.metaquotes.metatrader4:id/accept_button"
max_accept_attempts = 3

for attempt in range(max_accept_attempts):
    if safe_click_element(driver, wait, AppiumBy.ID, accept_button_id, f"–ö–Ω–æ–ø–∫–∞ accept (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})"):
        print(f"‚úÖ –ü—Ä–∏–Ω—è–ª–∏ —É—Å–ª–æ–≤–∏—è (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1})")
        time.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    else:
        print(f"‚ÑπÔ∏è –ö–Ω–æ–ø–∫–∞ accept –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}) - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")
        break

# ============================================================================
# –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ
# ============================================================================

# –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ action bar
if not safe_click_element(driver, wait, AppiumBy.ID, "net.metaquotes.metatrader4:id/actionbar_app_icon", "–ò–∫–æ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ action bar"):
    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–∫–æ–Ω–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")

# –ö–ª–∏–∫ –ø–æ –º–µ—Ç–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
if not safe_click_element(driver, wait, AppiumBy.ID, "net.metaquotes.metatrader4:id/account_mark", "–ú–µ—Ç–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞"):
    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ—Ç–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")

# –ö–ª–∏–∫ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é (–≤–æ–∑–º–æ–∂–Ω–æ, –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é)
# –í–ê–ñ–ù–û: –≠—Ç–æ—Ç XPath –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ Appium Inspector –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
xpath_image = "/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/androidx.drawerlayout.widget.DrawerLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.LinearLayout[2]/android.widget.LinearLayout/android.widget.RelativeLayout[2]/android.widget.ImageView"

if not safe_click_element(driver, wait, AppiumBy.XPATH, xpath_image, "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–µ–Ω—é"):
    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–µ–Ω—é - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ XPath —á–µ—Ä–µ–∑ Appium Inspector –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")

# –ö–ª–∏–∫ –ø–æ –ø–µ—Ä–≤–æ–º—É —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É (–≤–æ–∑–º–æ–∂–Ω–æ, –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–ø–∏—Å–∫–∞ –±—Ä–æ–∫–µ—Ä–æ–≤)
# –í–ê–ñ–ù–û: –≠—Ç–æ—Ç XPath –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ!
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ Appium Inspector –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
xpath_text = "/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/androidx.drawerlayout.widget.DrawerLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.LinearLayout[1]/android.widget.TextView[1]"

if not safe_click_element(driver, wait, AppiumBy.XPATH, xpath_text, "–ü–µ—Ä–≤—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç"):
    print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
    print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ XPath —á–µ—Ä–µ–∑ Appium Inspector –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")

# ============================================================================
# –ü–û–ò–°–ö –ò –§–ò–õ–¨–¢–†–ê–¶–ò–Ø –ë–†–û–ö–ï–†–û–í
# ============================================================================

try:
    print("üîç –ò—â–µ–º –ø–æ–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞...")
    
    # –û–∂–∏–¥–∞–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
    filter_element = wait.until(EC.element_to_be_clickable((AppiumBy.ID, "net.metaquotes.metatrader4:id/filter")))
    print("‚úÖ –ü–æ–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞ –Ω–∞–π–¥–µ–Ω–æ")
    
    # –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–æ–ª—é —Ñ–∏–ª—å—Ç—Ä–∞
    filter_element.click()
    print("‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ –ø–æ–ª—é —Ñ–∏–ª—å—Ç—Ä–∞")

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
    search_combinations = generate_search_combinations(num_combinations=SEARCH_COMBINATIONS_COUNT)
    
    print(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ —Å {len(search_combinations)} —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º–∏...")
    
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—è–º
    successful_searches = 0
    failed_searches = 0
    
    for idx, combination in enumerate(search_combinations, 1):
        try:
            print(f"\nüìù –ü–æ–∏—Å–∫ {idx}/{len(search_combinations)}: '{combination}'")
            
            # –í–≤–æ–¥–∏–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
            if safe_send_keys(driver, wait, AppiumBy.ID, "net.metaquotes.metatrader4:id/filter", combination, f"–í–≤–æ–¥ '{combination}'"):
                successful_searches += 1
                print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –≤–≤–µ–ª–∏ '{combination}'")
                
                # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                time.sleep(SEARCH_DELAY)
                
                # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∏—Å–∫–∞
                if safe_clear_field(driver, wait, AppiumBy.ID, "net.metaquotes.metatrader4:id/filter", f"–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ '{combination}'"):
                    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—á–∏—Å—Ç–∏–ª–∏ –ø–æ–ª–µ –ø–æ—Å–ª–µ '{combination}'")
                    time.sleep(CLEAR_DELAY)
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª–µ –ø–æ—Å–ª–µ '{combination}'")
                    failed_searches += 1
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ '{combination}'")
                failed_searches += 1
                
        except Exception as search_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ '{combination}': {search_error}")
            failed_searches += 1
            continue

    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤: {successful_searches}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤: {failed_searches}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(successful_searches / len(search_combinations) * 100):.1f}%")

except TimeoutException:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞")
    print("üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
    print("   - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é")
    print("   - –ò–∑–º–µ–Ω–∏–ª—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("   - –≠–ª–µ–º–µ–Ω—Ç –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–π ID –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ Appium Inspector –∞–∫—Ç—É–∞–ª—å–Ω—ã–π ID —ç–ª–µ–º–µ–Ω—Ç–∞")
except Exception as e:
    print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞: {e}")

# ============================================================================
# –ó–ê–í–ï–†–®–ï–ù–ò–ï –†–ê–ë–û–¢–´
# ============================================================================
print("\nüèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
time.sleep(3)

try:
    driver.quit()
    print("‚úÖ –î—Ä–∞–π–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç")
except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥—Ä–∞–π–≤–µ—Ä–∞: {e}")

print("üéâ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

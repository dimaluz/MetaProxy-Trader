#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä JSON —Ñ–∞–π–ª–æ–≤ –≤ CSV —Ñ–æ—Ä–º–∞—Ç –¥–ª—è MetaProxy-Trader
–ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ JSON –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–∫–µ—Ä–∞—Ö –≤ CSV —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Google Sheets
"""

import json
import csv
import os
from pathlib import Path
from datetime import datetime

def load_json_files(json_dir):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ JSON —Ñ–∞–π–ª—ã –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    json_files = []
    json_path = Path(json_dir)
    
    if not json_path.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {json_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return []
    
    # –ò—â–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã
    for file_path in json_path.glob("*.json"):
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
                json_files.append({
                    'filename': file_path.name,
                    'data': data,
                    'timestamp': file_path.stem.split('_')[2:4] if '_' in file_path.stem else ['unknown', 'unknown']
                })
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª: {file_path.name}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {file_path.name}: {e}")
    
    return json_files

def extract_broker_data(json_data):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–∫–µ—Ä–∞—Ö –∏–∑ JSON —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
    brokers = []
    
    def extract_from_dict(data, path=""):
        """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è"""
        if isinstance(data, dict):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–∫–µ—Ä–µ
            broker_keys = ['name', 'title', 'company', 'broker', 'server', 'description']
            if any(key in data for key in broker_keys):
                broker_info = {
                    'name': data.get('name', data.get('title', data.get('company', ''))),
                    'server': data.get('server', data.get('server_name', '')),
                    'description': data.get('description', data.get('comment', '')),
                    'type': data.get('type', ''),
                    'country': data.get('country', ''),
                    'url': data.get('url', data.get('website', '')),
                    'path': path
                }
                brokers.append(broker_info)
            
            # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è
            for key, value in data.items():
                new_path = f"{path}.{key}" if path else key
                extract_from_dict(value, new_path)
        
        elif isinstance(data, list):
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤—ã
            for i, item in enumerate(data):
                new_path = f"{path}[{i}]"
                extract_from_dict(item, new_path)
    
    extract_from_dict(json_data)
    return brokers

def create_csv_output(brokers, output_file):
    """–°–æ–∑–¥–∞–µ—Ç CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –±—Ä–æ–∫–µ—Ä–∞—Ö"""
    if not brokers:
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –±—Ä–æ–∫–µ—Ä–∞—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        return False
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø–æ–ª—è
    all_fields = set()
    for broker in brokers:
        all_fields.update(broker.keys())
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—è –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
    fieldnames = sorted(list(all_fields))
    
    try:
        with open(output_file, 'w', newline='', encoding='utf-8') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            writer.writeheader()
            
            for broker in brokers:
                # –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
                row = {field: broker.get(field, '') for field in fieldnames}
                writer.writerow(row)
        
        print(f"‚úÖ CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: {output_file}")
        print(f"üìä –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(brokers)} –∑–∞–ø–∏—Å–µ–π –æ –±—Ä–æ–∫–µ—Ä–∞—Ö")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ CSV —Ñ–∞–π–ª–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞"""
    print("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä JSON –≤ CSV –¥–ª—è MetaProxy-Trader")
    print("=" * 50)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    json_directory = "Captured_JSON"
    output_csv = f"brokers_data_{datetime.now().strftime('%Y%m%d_%H%M%S')}.csv"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª—ã
    print(f"üìÅ –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —Ñ–∞–π–ª—ã –∏–∑ {json_directory}...")
    json_files = load_json_files(json_directory)
    
    if not json_files:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
        return
    
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(json_files)} JSON —Ñ–∞–π–ª–æ–≤")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–∫–µ—Ä–∞—Ö
    print("üîç –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –±—Ä–æ–∫–µ—Ä–∞—Ö...")
    all_brokers = []
    
    for file_info in json_files:
        brokers = extract_broker_data(file_info['data'])
        all_brokers.extend(brokers)
        print(f"üìä –ò–∑–≤–ª–µ—á–µ–Ω–æ {len(brokers)} –±—Ä–æ–∫–µ—Ä–æ–≤ –∏–∑ {file_info['filename']}")
    
    # –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –∏–º–µ–Ω–∏ –∏ —Å–µ—Ä–≤–µ—Ä—É
    unique_brokers = []
    seen = set()
    
    for broker in all_brokers:
        key = (broker['name'], broker['server'])
        if key not in seen:
            seen.add(key)
            unique_brokers.append(broker)
    
    print(f"üîÑ –£–¥–∞–ª–µ–Ω–æ {len(all_brokers) - len(unique_brokers)} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª
    print(f"üíæ –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª: {output_csv}")
    if create_csv_output(unique_brokers, output_csv):
        print("\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÑ –§–∞–π–ª –≥–æ—Ç–æ–≤ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Google Sheets: {output_csv}")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏–º–ø–æ—Ä—Ç—É –≤ Google Sheets:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Google Sheets")
        print("2. File ‚Üí Import")
        print("3. Upload ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª " + output_csv)
        print("4. Import location: Create new spreadsheet")
        print("5. Separator type: Comma")
        print("6. –ù–∞–∂–º–∏—Ç–µ Import data")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ CSV —Ñ–∞–π–ª–∞")

if __name__ == "__main__":
    main()
